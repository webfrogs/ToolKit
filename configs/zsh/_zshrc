# Path to your oh-my-zsh installation.
export ZSH=~/.config/oh-my-zsh

# bullet-train config
#export BULLETTRAIN_TIME_BG=11
export BULLETTRAIN_GIT_BG=11
BULLETTRAIN_PROMPT_ORDER=(
  status
  git
  dir
  time
)

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="bullet-train-oh-my-zsh-theme/bullet-train"
ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git osx xcode swiftpm docker)

# User configuration

#export PATH="/Users/carl/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin"
# export MANPATH="/usr/local/man:$MANPATH"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


#---- My config
export DEFAULT_USER=carl
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Ruby settings
export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

# Golang settings
export GOPATH=$HOME/go

# Python settings
[ -x "$(command -v python3)" ] && export PATH="$PATH:$(python3 -m site --user-base)/bin"

# Dev setting
export BXSHARE="/opt/bochs/share/bochs"
export PATH="/usr/local/bin:$PATH:/opt/bochs/bin:$HOME/.local/bin:$GOPATH/bin"
export THEOS=/opt/theos

# Homebrew env setting
if test -f "/home/linuxbrew/.linuxbrew/bin/brew"; then
    eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) > /dev/null 2>&1
fi

# Proxy
alias sock5ProxyStart="export ALL_PROXY=socks5://127.0.0.1:1086" 
alias sock5ProxyStop="unset ALL_PROXY"
alias httpProxyStart="export http_proxy='http://127.0.0.1:1087' && export https_proxy='http://127.0.0.1:1087'"
alias httpProxyStop="unset http_proxy && unset https_proxy"

# custom local setting
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

# fzf settings
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# nvm settings
export NVM_DIR="$HOME/.nvm"
if test -d "${NVM_DIR}"; then
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
fi


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"
